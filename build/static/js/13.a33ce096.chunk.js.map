{"version":3,"sources":["app/common/form/TextInput.jsx","features/auth/authActions.jsx","features/modals/TestModal.jsx","features/auth/SocialLogin/SocialLogin.jsx","features/auth/Login/LoginForm.jsx","features/modals/LoginModal.jsx","features/auth/Register/RegisterForm.jsx","features/modals/RegisterModal.jsx","features/modals/UnauthModal.jsx","features/modals/ModalManager.jsx"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","TextInput","_ref","input","width","type","placeholder","_ref$meta","meta","touched","error","a","createElement","Field","Object","assign","basic","color","login","creds","_ref2","_Users_dinghao_Documents_HaoLab_hawesome_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_Users_dinghao_Documents_HaoLab_hawesome_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","mark","_callee","dispatch","getState","getFirebase","firebase","wrap","_context","prev","next","auth","signInWithEmailAndPassword","email","password","closeModal","t0","console","log","SubmissionError","_error","message","stop","this","_x","_x2","_x3","apply","arguments","registerUser","user","_ref4","_callee2","_ref3","getFirestore","firestore","curUser","newUser","_context2","createUserWithEmailAndPassword","currentUser","sent","updateProfile","displayName","createdAt","FieldValue","serverTimestamp","set","concat","uid","_Users_dinghao_Documents_HaoLab_hawesome_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","_x4","_x5","_x6","socialLogin","selectedProvider","_ref6","_callee3","_ref5","_context3","provider","additionalUserInfo","isNewUser","profile","photoURL","avatarUrl","_x7","_x8","_x9","updatePassword","_ref8","_callee4","_ref7","_context4","newPassword1","reset","toastr","success","_x10","_x11","_x12","actions","connect","react_default","dist_es","closeIcon","open","onClose","Header","Content","Description","SocialLogin","onClick","style","marginBottom","fluid","name","reduxForm","form","handleSubmit","size","onSubmit","component","horizontal","SocialLogin_SocialLogin","LoginModal","props","Login_LoginForm","Component","validate","combineValidators","isRequired","invalid","submitting","disabled","RegisterModal","Register_RegisterForm","openModal","UnauthModal","handleCloseModal","_this","location","pathname","includes","history","goBack","Group","widths","Or","positive","textAlign","modalLookup","TestModal","withRouter","state","currentModal","modals","renderedModal","modalType","modalProps","ModalComponent"],"mappings":"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","file":"static/js/13.a33ce096.chunk.js","sourcesContent":["import React from 'react'\nimport { Form, Label } from 'semantic-ui-react';\n\nfunction TextInput({input, width, type, placeholder, meta: {touched, error}}) {\n  return (\n    <Form.Field error={touched && !!error} width={width}>\n        <input {...input} placeholder={placeholder} width={width} type={type}></input>\n        {touched && error && <Label basic color='red'>{error}</Label>}\n    </Form.Field>\n  )\n}\n\nexport default TextInput\n","import { SubmissionError, reset } from 'redux-form';\nimport { closeModal } from \"../modals/modalActions\";\nimport { toastr } from 'react-redux-toastr';\n\nexport const login = (creds) => {\n    return async (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n        try {\n            await firebase.auth().signInWithEmailAndPassword(creds.email, creds.password);\n            dispatch(closeModal());\n        } catch (error) {\n            console.log(error);\n            throw new SubmissionError({\n                _error: error.message\n            })\n        }\n    }\n};\n\nexport const registerUser = user => async (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    try {\n        // create the new user in auth\n        await firebase.auth().createUserWithEmailAndPassword(user.email, user.password);\n        // update the auth profile\n        let curUser = await firebase.auth().currentUser;\n        await curUser.updateProfile({\n            displayName: user.displayName\n        });\n        // create a new profile in firestore\n        let newUser = {\n            displayName: user.displayName,\n            createdAt: firestore.FieldValue.serverTimestamp()\n        };\n        await firestore.set(`users/${curUser.uid}`, {...newUser});\n        dispatch(closeModal());\n\n    } catch (error) {\n        console.log(error);\n        throw new SubmissionError({\n            _error: error.message\n        })\n    }\n};\n\nexport const socialLogin = (selectedProvider) => async (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    try {\n        dispatch(closeModal());\n        let user = await firebase.login({\n            provider: selectedProvider,\n            type: 'popup'\n        });\n        if (user.additionalUserInfo.isNewUser) {\n            await firestore.set(`users/${user.user.uid}`, {\n                displayName: user.profile.displayName,\n                photoURL: user.profile.avatarUrl,\n                createdAt: firestore.FieldValue.serverTimestamp()\n            })\n        }\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const updatePassword = (creds) => async (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    const user = firebase.auth().currentUser;\n    try {\n        await user.updatePassword(creds.newPassword1);\n        await dispatch(reset('account'));\n        toastr.success('Success', 'Your password has been updated');\n    } catch (error) {\n        throw new SubmissionError({\n            _error: error.message\n        })\n    }\n};\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Modal } from 'semantic-ui-react'\nimport { closeModal } from './modalActions'\n\nconst actions = {\n    closeModal\n};\n\nfunction TestModal({closeModal}) {\n    return (\n        <Modal closeIcon=\"close\" open={true} onClose={closeModal}>\n            <Modal.Header>Test Modal</Modal.Header>\n            <Modal.Content>\n                <Modal.Description>\n                    <p>Test Modal... nothing to see here</p>\n                </Modal.Description>\n            </Modal.Content>\n        </Modal>\n    )\n}\n\nexport default connect(null, actions)(TestModal)","import React from 'react';\nimport { Button, Icon } from 'semantic-ui-react';\n\nfunction SocialLogin({socialLogin}) {\n    return (\n        <div>\n            <Button onClick={() => socialLogin('facebook')} type=\"button\" style={{ marginBottom: '10px' }} fluid color=\"facebook\">\n                <Icon name=\"facebook\" /> Login with Facebook\n            </Button>\n\n            <Button onClick={() => socialLogin('google')} type=\"button\" fluid color=\"google plus\">\n                <Icon name=\"google plus\" />\n                Login with Google\n            </Button>\n        </div>\n    )\n}\n\nexport default SocialLogin;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Segment, Button, Label, Divider } from 'semantic-ui-react';\nimport { Field, reduxForm } from 'redux-form';\nimport TextInput from '../../../app/common/form/TextInput';\nimport { login, socialLogin } from '../authActions';\nimport SocialLogin from '../SocialLogin/SocialLogin';\n\nconst actions = {\n    login,\n    socialLogin\n};\n\nconst LoginForm = ({login, handleSubmit, error, socialLogin}) => {\n    return (\n        <Form size=\"large\" onSubmit={handleSubmit(login)}>\n            <Segment>\n                <Field\n                    name=\"email\"\n                    component={TextInput}\n                    type=\"text\"\n                    placeholder=\"Email Address\"\n                />\n                <Field\n                    name=\"password\"\n                    component={TextInput}\n                    type=\"password\"\n                    placeholder=\"password\"\n                />\n                {error && <Label basic color='red'>{error}</Label>}\n                <Button fluid size=\"large\" color=\"teal\">\n                    Login\n                </Button>\n                <Divider horizontal>\n                    Or\n                </Divider>\n                <SocialLogin socialLogin={socialLogin}/>\n            </Segment>\n        </Form>\n    );\n};\n\nexport default connect(null, actions)(reduxForm({form: 'loginForm'})(LoginForm));","import React, {Component} from 'react';\nimport {Modal} from 'semantic-ui-react';\nimport {connect} from 'react-redux';\n\nimport LoginForm from '../auth/Login/LoginForm';\nimport {closeModal} from \"./modalActions\";\n\nconst actions = {closeModal};\n\nclass LoginModal extends Component {\n    render() {\n        return (\n            <Modal size='mini' open={true} onClose={this.props.closeModal}>\n                <Modal.Header>\n                    Login to H-awesome\n                </Modal.Header>\n                <Modal.Content>\n                    <Modal.Description>\n                        <LoginForm />\n                    </Modal.Description>\n                </Modal.Content>\n            </Modal>\n        );\n    }\n}\n\nexport default connect(null, actions)(LoginModal);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Segment, Button, Label, Divider } from 'semantic-ui-react';\nimport { Field, reduxForm } from 'redux-form';\nimport { combineValidators, isRequired } from 'revalidate';\nimport TextInput from '../../../app/common/form/TextInput';\nimport { registerUser } from '../authActions';\nimport SocialLogin from \"../SocialLogin/SocialLogin\";\n\nconst actions = {\n    registerUser\n};\n\nconst validate = combineValidators({\n    displayName: isRequired('displayName'),\n    email: isRequired('email'),\n    password: isRequired('password')\n});\n\nconst RegisterForm = ({handleSubmit, registerUser, error, invalid, submitting}) => {\n    return (\n        <div>\n            <Form size=\"large\" onSubmit={handleSubmit(registerUser)}>\n                <Segment>\n                    <Field\n                        name=\"displayName\"\n                        type=\"text\"\n                        component={TextInput}\n                        placeholder=\"Known As\"\n                    />\n                    <Field\n                        name=\"email\"\n                        type=\"text\"\n                        component={TextInput}\n                        placeholder=\"Email\"\n                    />\n                    <Field\n                        name=\"password\"\n                        type=\"password\"\n                        component={TextInput}\n                        placeholder=\"Password\"\n                    />\n                    {error && <Label basic color='red'>{error}</Label>}\n                    <Button disabled={invalid || submitting} fluid size=\"large\" color=\"teal\">\n                        Register\n                    </Button>\n                    <Divider horizontal>\n                        Or\n                    </Divider>\n                    <SocialLogin/>\n                </Segment>\n            </Form>\n        </div>\n    );\n};\n\nexport default connect(null, actions)(reduxForm({form: 'registerForm', validate})(RegisterForm)) ;","import React, {Component} from 'react';\nimport {Modal} from 'semantic-ui-react';\nimport {connect} from 'react-redux';\n\nimport {closeModal} from \"./modalActions\";\nimport RegisterForm from \"../auth/Register/RegisterForm\";\n\nconst actions = {closeModal};\n\nclass RegisterModal extends Component {\n    render() {\n        return (\n            <Modal size='mini' open={true} onClose={this.props.closeModal}>\n                <Modal.Header>\n                    Sign Up to H-awesome!\n                </Modal.Header>\n                <Modal.Content>\n                    <Modal.Description>\n                        <RegisterForm />\n                    </Modal.Description>\n                </Modal.Content>\n            </Modal>\n        );\n    }\n}\n\nexport default connect(null, actions)(RegisterModal);","import React, {Component} from 'react';\nimport {Modal, Button, Divider} from 'semantic-ui-react';\nimport {connect} from 'react-redux';\nimport { withRouter } from 'react-router-dom'\n\nimport {closeModal, openModal} from \"./modalActions\";\n\nconst actions = {closeModal, openModal};\n\nclass UnauthModal extends Component {\n    handleCloseModal = () => {\n        if (this.props.location.pathname.includes('/event')) {\n            this.props.closeModal();\n        } else {\n            this.props.history.goBack();\n            this.props.closeModal();\n        }\n\n    };\n\n    render() {\n        const {openModal} = this.props;\n        return (\n            <Modal\n                size='mini'\n                open={true}\n                onClose={this.handleCloseModal}\n            >\n                <Modal.Header>\n                    You need to be signed in to do that!\n                </Modal.Header>\n                <Modal.Content>\n                    <Modal.Description>\n                        <p>Please either login or register to see this page</p>\n                        <Button.Group widths={4}>\n                            <Button fluid color='teal' onClick={() => openModal(\"LoginModal\")}>Login</Button>\n                            <Button.Or />\n                            <Button fluid positive onClick={() => openModal(\"RegisterModal\")}>Register</Button>\n                        </Button.Group>\n                        <Divider/>\n                        <div style={{textAlign: 'center'}}>\n                            <p>Or click cancel to continue as a guest</p>\n                            <Button onClick={this.handleCloseModal}>Cancel</Button>\n                        </div>\n                    </Modal.Description>\n                </Modal.Content>\n            </Modal>\n        );\n    }\n}\n\nexport default withRouter(connect(null, actions)(UnauthModal));","import React from 'react'\nimport { connect } from 'react-redux'\nimport TestModal from './TestModal'\nimport LoginModal from './LoginModal'\nimport RegisterModal from'./RegisterModal'\nimport UnauthModal from './UnauthModal'\n\nconst modalLookup = {\n    TestModal,\n    LoginModal,\n    RegisterModal,\n    UnauthModal\n};\n\nconst mapState = (state) => ({\n    currentModal: state.modals\n});\n\nfunction ModalManager({currentModal}) {\n    let renderedModal;\n\n    if (currentModal) {\n        const {modalType, modalProps} = currentModal;\n        const ModalComponent = modalLookup[modalType];\n\n        renderedModal = <ModalComponent {...modalProps}></ModalComponent>\n    }\n\n    return <span>{renderedModal}</span>\n}\n\nexport default connect(mapState)(ModalManager)"],"sourceRoot":""}