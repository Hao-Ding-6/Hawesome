{"version":3,"sources":["features/async/asyncActions.jsx","app/common/form/TextInput.jsx","features/user/userActions.jsx","app/common/form/TextArea.jsx","app/common/form/PlaceInput.jsx","features/auth/authActions.jsx","app/common/form/SelectInput.jsx","app/common/form/DateInput.jsx","features/user/Settings/SettingsNav.jsx","app/common/form/RadioInput.jsx","features/user/Settings/BasicPage.jsx","features/user/Settings/AboutPage.jsx","features/user/Settings/PhotosPage.jsx","features/user/Settings/AccountPage.jsx","features/user/Settings/SettingsDashboard.jsx"],"names":["__webpack_require__","d","__webpack_exports__","asyncActionStart","asyncActionFinish","asyncActionError","_asyncConstants__WEBPACK_IMPORTED_MODULE_0__","type","ASYNC_ACTION_START","ASYNC_ACTION_FINISH","ASYNC_ACTION_ERROR","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","semantic_ui_react__WEBPACK_IMPORTED_MODULE_1__","TextInput","_ref","input","width","placeholder","_ref$meta","meta","touched","error","a","createElement","Field","Object","assign","basic","color","updateProfile","user","_ref2","_Users_dinghao_Documents_HaoLab_hawesome_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__","_Users_dinghao_Documents_HaoLab_hawesome_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","mark","_callee","dispatch","getState","getFirebase","firebase","updatedUser","wrap","_context","prev","next","isLoaded","isEmpty","_Users_dinghao_Documents_HaoLab_hawesome_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__","dateOfBirth","profile","moment","toDate","toastr","success","t0","console","log","stop","this","_x","_x2","_x3","apply","arguments","uploadProfileImage","file","fileName","_ref4","_callee2","_ref3","getFirestore","imageName","firestore","path","options","uploadedFile","downloadURL","_context2","cuid","auth","currentUser","concat","uid","name","uploadFile","sent","uploadTaskSnapshot","ref","getDownloadURL","get","data","photoURL","add","collection","doc","subcollections","url","Error","_x4","_x5","_x6","deletePhoto","photo","_ref6","_callee3","_ref5","_context3","deleteFile","delete","id","_x7","_x8","_x9","setMainPhoto","_ref7","_callee4","today","userDocRef","eventAttendeeRef","batch","eventQuery","eventQuerySnap","i","eventDocRef","_context4","Date","now","update","where","docs","length","eventId","hostUid","_Users_dinghao_Documents_HaoLab_hawesome_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","hostPhotoURL","commit","_x10","_x11","goingToEvent","event","_ref8","_callee6","attendee","eventAttendeeDocRef","_context6","going","joinDate","displayName","host","runTransaction","_ref9","_callee5","transaction","_context5","set","userUid","eventDate","date","_x14","_x12","_x13","cancelGoingToEvent","_ref11","_callee7","_ref10","_context7","FieldValue","_x15","_x16","_x17","getUserEvents","activeTab","_ref12","_callee8","eventRef","query","querySnap","events","evt","_context8","orderBy","abrupt","push","_Users_dinghao_Documents_HaoLab_hawesome_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","FETCH_EVENTS","payload","t1","_x18","_x19","followUser","userToFollow","_ref14","_callee9","_ref13","following","_context9","city","_x20","_x21","_x22","unfollowUser","userToUnfollow","_ref16","_callee10","_ref15","_context10","_x23","_x24","_x25","TextArea","rows","styles","autocompleteContainer","zIndex","PlaceInput","state","scriptLoaded","handleScriptLoaded","_this","setState","_this$props","props","onSelect","_this$props$meta","react__WEBPACK_IMPORTED_MODULE_6___default","semantic_ui_react__WEBPACK_IMPORTED_MODULE_7__","react_load_script__WEBPACK_IMPORTED_MODULE_8___default","onLoad","react_places_autocomplete__WEBPACK_IMPORTED_MODULE_9___default","inputProps","Component","login","creds","_Users_dinghao_Documents_HaoLab_hawesome_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_Users_dinghao_Documents_HaoLab_hawesome_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","signInWithEmailAndPassword","email","password","closeModal","SubmissionError","_error","message","registerUser","curUser","newUser","createUserWithEmailAndPassword","createdAt","serverTimestamp","socialLogin","selectedProvider","provider","additionalUserInfo","isNewUser","avatarUrl","updatePassword","newPassword1","reset","SelectInput","multiple","value","onChange","e","DateInput","_ref$input","onBlur","restInput","_Users_dinghao_Documents_HaoLab_hawesome_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","rest","react__WEBPACK_IMPORTED_MODULE_1___default","semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__","react_datepicker__WEBPACK_IMPORTED_MODULE_3__","placeholderText","selected","SettingsNav","react_default","dist_es","Column","vertical","icon","attached","inverted","content","Item","as","NavLink","to","Row","RadioInput","label","className","BasicPage","pristine","submitting","handleSubmit","dividing","size","onSubmit","component","Group","inline","dateFormat","showYearDropdown","showMonthDropdown","dropdownMode","maxDate","subtract","types","disabled","positive","reduxForm","form","enableReinitialize","destroyOnUnmount","interests","key","text","actions","PhotosPage","files","cropResult","image","uploadImage","regenerator_default","cancelCrop","handlePhotoDelete","asyncToGenerator","handleSetMainPhoto","cropImage","refs","cropper","getCroppedCanvas","toBlob","blob","imageUrl","URL","createObjectURL","onDrop","filterPhotos","_this2","photos","loading","filter","sub","react_dropzone_dist_es","style","paddingTop","textAlign","react_cropper_default","height","src","preview","aspectRatio","viewMode","dragMode","guides","scalable","cropBoxmovable","cropBoxResizable","crop","minHeight","minWidth","onClick","itemsPerRow","map","compose","connect","ordered","async","firestoreConnect","storeAs","validate","combineValidators","isRequired","newPassword2","composeValidators","matchesField","invalid","providerId","pointing","providerData","Switch","Redirect","exact","from","Route","render","Settings_BasicPage","initialValues","Settings_AboutPage","Settings_AccountPage","Settings_SettingsNav"],"mappings":"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","file":"static/js/9.3be36d39.chunk.js","sourcesContent":["import { ASYNC_ACTION_START, ASYNC_ACTION_FINISH, ASYNC_ACTION_ERROR } from './asyncConstants'\n\nexport const asyncActionStart = () => {\n    return {\n        type: ASYNC_ACTION_START\n    }\n};\n\nexport const asyncActionFinish = () => {\n    return {\n        type: ASYNC_ACTION_FINISH\n    }\n};\n\nexport const asyncActionError = () => {\n    return {\n        type: ASYNC_ACTION_ERROR\n    }\n};\n\n","import React from 'react'\nimport { Form, Label } from 'semantic-ui-react';\n\nfunction TextInput({input, width, type, placeholder, meta: {touched, error}}) {\n  return (\n    <Form.Field error={touched && !!error} width={width}>\n        <input {...input} placeholder={placeholder} width={width} type={type}></input>\n        {touched && error && <Label basic color='red'>{error}</Label>}\n    </Form.Field>\n  )\n}\n\nexport default TextInput\n","import moment from 'moment';\nimport cuid from 'cuid';\nimport { toastr } from 'react-redux-toastr';\nimport { asyncActionStart, asyncActionFinish, asyncActionError } from '../async/asyncActions';\nimport firebase from '../../app/config/firebase';\nimport { FETCH_EVENTS } from \"../event/eventConstants\";\n\nexport const updateProfile = (user) => async (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n    const {isLoaded, isEmpty, ...updatedUser} = user;\n    if (updatedUser.dateOfBirth !== getState().firebase.profile.dateOfBirth) {\n        updatedUser.dateOfBirth = moment(updatedUser.dateOfBirth).toDate();\n    }\n\n    try {\n        await firebase.updateProfile(updatedUser);\n        toastr.success('Success', 'Profile updated');\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const uploadProfileImage = (file, fileName) => async (dispatch, getState, {getFirebase, getFirestore}) => {\n    const imageName = cuid();\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    const user = firebase.auth().currentUser;\n    const path = `${user.uid}/user_images`;\n    const options = {\n        name: imageName\n    };\n\n    try {\n        dispatch(asyncActionStart());\n        // upload the file to firebase storage\n        let uploadedFile = await firebase.uploadFile(path, file, null, options);\n        // get url of image\n        let downloadURL = await uploadedFile.uploadTaskSnapshot.ref.getDownloadURL();\n        // get user doc\n        let userDoc = await firestore.get(`users/${user.uid}`);\n        // check if user has photo, if not update profile with new image\n        if (!userDoc.data().photoURL) {\n            await firebase.updateProfile({\n                photoURL: downloadURL\n            });\n            await user.updateProfile({\n                photoURL: downloadURL\n            });\n        }\n        // add the new photo to photos collection\n        await firestore.add({\n            collection: 'users',\n            doc: user.uid,\n            subcollections: [{collection: 'photos'}]\n        }, {\n            name: imageName,\n            url: downloadURL\n        });\n        dispatch(asyncActionFinish());\n\n    } catch (error) {\n        console.log(error);\n        dispatch(asyncActionError());\n        throw new Error('Problem uploading photo')\n    }\n};\n\nexport const deletePhoto = (photo) => async (dispatch, getState, {getFirebase, getFirestore}) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    const user = firebase.auth().currentUser;\n    try {\n        await firebase.deleteFile(`${user.uid}/user_images/${photo.name}`);\n        await firestore.delete({\n            collection: 'users',\n            doc: user.uid,\n            subcollections: [{collection: 'photos', doc: photo.id}]\n        })\n    } catch (error) {\n        console.log(error);\n        throw new Error('Problem deleting photo')\n    }\n};\n\nexport const setMainPhoto = photo => async (dispatch, getState) => {\n    console.log(photo);\n    dispatch(asyncActionStart());\n    const firestore = firebase.firestore();\n    const user = firebase.auth().currentUser;\n    const today = new Date(Date.now());\n    let userDocRef = firestore.collection('users').doc(user.uid);\n    let eventAttendeeRef = firestore.collection('event_attendee');\n    try {\n        let batch = firestore.batch();\n\n        await batch.update(userDocRef, {\n            photoURL: photo.url\n        });\n\n        let eventQuery = await eventAttendeeRef.where('userUid', '==', user.uid).where('eventDate', '>', today);\n\n        let eventQuerySnap = await eventQuery.get();\n\n        for (let i = 0 ; i < eventQuerySnap.docs.length; i ++) {\n            let eventDocRef = await firestore.collection('events').doc(eventQuerySnap.docs[i].data().eventId);\n            let event = await eventDocRef.get();\n            if (event.data().hostUid === user.uid) {\n                batch.update(eventDocRef, {\n                    hostPhotoURL: photo.url,\n                    [`attendees.${user.uid}.photoURL`]: photo.url\n                })\n            } else {\n                batch.update(eventDocRef, {\n                    [`attendees.${user.uid}.photoURL`]: photo.url\n                })\n            }\n        }\n        await batch.commit();\n        dispatch(asyncActionFinish());\n    } catch (error) {\n        console.log(error);\n        dispatch(asyncActionError());\n        throw new Error('Problem setting main photo')\n    }\n};\n\nexport const goingToEvent = (event) => async (dispatch, getState) => {\n    dispatch(asyncActionStart());\n    const firestore = firebase.firestore();\n    const user = firebase.auth().currentUser;\n    const profile = getState().firebase.profile;\n    const attendee = {\n        going: true,\n        joinDate: Date.now(),\n        photoURL: profile.photoURL || '/assets/user.png',\n        displayName: profile.displayName,\n        host: false\n    };\n\n    try {\n        let eventDocRef = firestore.collection('events').doc(event.id);\n        let eventAttendeeDocRef = firestore.collection('event_attendee').doc(`${event.id}_${user.uid}`);\n\n        await firestore.runTransaction(async (transaction) => {\n            await transaction.get(eventDocRef);\n            await transaction.update(eventDocRef, {\n                [`attendees.${user.uid}`]: attendee\n            });\n            await transaction.set(eventAttendeeDocRef, {\n                eventId: event.id,\n                userUid: user.uid,\n                eventDate: event.date,\n                host: false\n            });\n        });\n\n        dispatch(asyncActionFinish());\n        toastr.success('Success', 'You have signed up to the event');\n    } catch (error) {\n        console.log(error);\n        dispatch(asyncActionError());\n        toastr.error('Oops', 'Problem signing up to event')\n    }\n};\n\nexport const cancelGoingToEvent = (event) => async (dispatch, getState, {getFirestore}) => {\n    const firestore = getFirestore();\n    const user = firestore.auth().currentUser;\n\n    try {\n        await firestore.update(`events/${event.id}`, {\n            [`attendees.${user.uid}`]: firestore.FieldValue.delete()\n        });\n        await firestore.delete(`event_attendee/${event.id}_${user.uid}`);\n        toastr.success('Success', 'You have removed yourself from the event');\n    } catch (error) {\n        console.log(error);\n        toastr.error('Oops', 'Problem leaving event')\n    }\n};\n\nexport const getUserEvents = (userUid, activeTab) => async (dispatch, getState) => {\n    dispatch(asyncActionStart());\n    const firestore = firebase.firestore();\n    const today = new Date(Date.now());\n    let eventRef = firestore.collection('event_attendee');\n    let query;\n    switch (activeTab) {\n        // previous events\n        case 1:\n            query = eventRef\n                .where('userUid', '==', userUid)\n                .where('eventDate', '<=', today)\n                .orderBy('eventDate', 'desc');\n            break;\n        // future events\n        case 2:\n            query = eventRef\n                .where('userUid', '==', userUid)\n                .where('eventDate', '>=', today)\n                .orderBy('eventDate');\n            break;\n        // hosted events\n        case 3:\n            query = eventRef\n                .where('userUid', '==', userUid)\n                .where('host', '==', true)\n                .orderBy('eventDate', 'desc');\n            break;\n        // default\n        default:\n            query = eventRef\n                .where('userUid', '==', userUid)\n                .orderBy('eventDate', 'desc');\n            break;\n    }\n\n    try {\n        let querySnap = await query.get();\n        let events = [];\n\n        for (let i = 0; i < querySnap.docs.length; i ++) {\n            let evt = await firestore.collection('events').doc(querySnap.docs[i].data().eventId).get();\n            events.push({...evt.data(), id: evt.id});\n        }\n\n        dispatch({type: FETCH_EVENTS, payload: {events}});\n\n        dispatch(asyncActionFinish());\n    } catch (error) {\n        console.log(error);\n        dispatch(asyncActionError());\n    }\n};\n\nexport const followUser = userToFollow => async (dispatch, getState, {getFirestore}) => {\n    const firestore = getFirestore();\n    const user = firestore.auth().currentUser;\n\n    const following = {\n        photoURL: userToFollow.photoURL || '/assets/user.png',\n        city: userToFollow.city || 'Unknown City',\n        displayName: userToFollow.displayName\n    };\n\n    try {\n        await firestore.set({\n            collection: 'users',\n            doc: user.uid,\n            subcollections: [{collection: 'following', doc: userToFollow.id}]},\n        following);\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const unfollowUser = (userToUnfollow) => async (dispatch, getState, {getFirestore}) => {\n    const firestore = getFirestore();\n    const user = firestore.auth().currentUser;\n    try {\n        await firestore.delete({\n            collection: 'users',\n            doc: user.uid,\n            subcollections: [{collection: 'following', doc: userToUnfollow.id}]\n        })\n    } catch (error) {\n        console.log(error);\n    }\n};","import React from 'react'\nimport { Form, Label } from 'semantic-ui-react'\n\nfunction TextArea({input, rows, type, placeholder, meta: {touched, error}}) {\n  return (\n    <Form.Field error={touched && !!error}>\n        <textarea {...input} placeholder={placeholder} rows={rows}></textarea>\n        {touched && error && <Label basic color='red'>{error}</Label>}\n    </Form.Field>\n  )\n}\n\nexport default TextArea\n","import React, {Component} from 'react';\nimport { Form, Label } from 'semantic-ui-react';\nimport Script from 'react-load-script';\nimport PlacesAutocomplete from 'react-places-autocomplete';\n\nconst styles = {\n    autocompleteContainer: {\n        zIndex: 1000\n    }\n};\n\nclass PlaceInput extends Component {\n    state = {\n        scriptLoaded: false\n    };\n\n    handleScriptLoaded = () => this.setState({scriptLoaded: true});\n\n    render() {\n        const {input, width, onSelect, placeholder, options, meta: {touched, error}} = this.props;\n        return (\n            <Form.Field error={touched && !!error} width={width}>\n                <Script\n                    url='https://maps.googleapis.com/maps/api/js?key=AIzaSyDgaL61tZqLxRUjDq1KaBZXk7hENz3ghTs&libraries=places'\n                    onLoad={this.handleScriptLoaded}\n                />\n\n                {this.state.scriptLoaded &&\n                <PlacesAutocomplete\n                    inputProps={{...input, placeholder}}\n                    options={options}\n                    onSelect={onSelect}\n                    styles={styles}\n                />}\n\n                {touched && error && <Label basic color='red'>{error}</Label>}\n            </Form.Field>\n        );\n    }\n}\n\nexport default PlaceInput;","import { SubmissionError, reset } from 'redux-form';\nimport { closeModal } from \"../modals/modalActions\";\nimport { toastr } from 'react-redux-toastr';\n\nexport const login = (creds) => {\n    return async (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n        try {\n            await firebase.auth().signInWithEmailAndPassword(creds.email, creds.password);\n            dispatch(closeModal());\n        } catch (error) {\n            console.log(error);\n            throw new SubmissionError({\n                _error: error.message\n            })\n        }\n    }\n};\n\nexport const registerUser = user => async (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    try {\n        // create the new user in auth\n        await firebase.auth().createUserWithEmailAndPassword(user.email, user.password);\n        // update the auth profile\n        let curUser = await firebase.auth().currentUser;\n        await curUser.updateProfile({\n            displayName: user.displayName\n        });\n        // create a new profile in firestore\n        let newUser = {\n            displayName: user.displayName,\n            createdAt: firestore.FieldValue.serverTimestamp()\n        };\n        await firestore.set(`users/${curUser.uid}`, {...newUser});\n        dispatch(closeModal());\n\n    } catch (error) {\n        console.log(error);\n        throw new SubmissionError({\n            _error: error.message\n        })\n    }\n};\n\nexport const socialLogin = (selectedProvider) => async (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    try {\n        dispatch(closeModal());\n        let user = await firebase.login({\n            provider: selectedProvider,\n            type: 'popup'\n        });\n        if (user.additionalUserInfo.isNewUser) {\n            await firestore.set(`users/${user.user.uid}`, {\n                displayName: user.profile.displayName,\n                photoURL: user.profile.avatarUrl,\n                createdAt: firestore.FieldValue.serverTimestamp()\n            })\n        }\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const updatePassword = (creds) => async (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    const user = firebase.auth().currentUser;\n    try {\n        await user.updatePassword(creds.newPassword1);\n        await dispatch(reset('account'));\n        toastr.success('Success', 'Your password has been updated');\n    } catch (error) {\n        throw new SubmissionError({\n            _error: error.message\n        })\n    }\n};\n","import React from 'react'\nimport { Form, Label, Select } from 'semantic-ui-react'\n\nfunction SelectInput({input, type, placeholder, multiple, options, meta: {touched, error}}) {\n  return (\n    <Form.Field error={touched && !!error}>\n        <Select\n            value={input.value || null}\n            onChange={(e, data) => input.onChange(data.value)}\n            placeholder={placeholder}\n            multiple={multiple}\n            options={options}\n        ></Select>\n        {touched && error && <Label basic color='red'>{error}</Label>}\n    </Form.Field>\n  )\n}\n\nexport default SelectInput\n","import React from 'react'\nimport { Form, Label } from 'semantic-ui-react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport moment from 'moment';\n\nfunction DateInput({input: {value, onChange, onBlur, ...restInput}, width, placeholder, meta: {touched, error}, ...rest}) {\n    if (value) {\n        value = moment(value, 'X');\n    }\n\n    return (\n        <Form.Field error={touched && !!error} width={width}>\n            <DatePicker\n                {...rest}\n                placeholderText={placeholder}\n                selected={value ? moment(value) : null}\n                onChange={onChange}\n                onBlur={() => onBlur()}\n                {...restInput}\n            />\n            {touched && error && <Label basic color='red'>{error}</Label>}\n        </Form.Field>\n    )\n}\n\nexport default DateInput\n","import React from 'react'\nimport { Grid, Header, Menu } from 'semantic-ui-react'\nimport { NavLink } from 'react-router-dom'\n\nfunction SettingsNav() {\n  return (\n    <Grid.Column width={4}>\n      <Menu vertical>\n        <Header icon=\"user\" attached inverted color=\"grey\" content=\"Profile\" />\n        <Menu.Item as={NavLink} to='/settings/basic'>Basics</Menu.Item>\n        <Menu.Item as={NavLink} to='/settings/about'>About Me</Menu.Item>\n        <Menu.Item as={NavLink} to='/settings/photos'>My Photos</Menu.Item>\n      </Menu>\n      <Grid.Row />\n      <Menu vertical>\n        <Header icon=\"settings\" attached inverted color=\"grey\" content=\"Account\"/>\n        <Menu.Item as={NavLink} to='/settings/account'>My Account</Menu.Item>\n      </Menu>\n    </Grid.Column>\n  )\n}\n\nexport default SettingsNav\n","import React from 'react';\nimport { Form } from 'semantic-ui-react';\n\nfunction RadioInput({input, width, type, label}) {\n    return (\n        <Form.Field>\n            <div className='ui radio'>\n                <input {...input} type={type}/>{' '}\n                <label>{label}</label>\n            </div>\n        </Form.Field>\n    )\n}\n\nexport default RadioInput;","import React, {Component} from 'react';\nimport {Segment, Form, Header, Divider, Button} from 'semantic-ui-react';\nimport {Field, reduxForm} from 'redux-form';\nimport moment from 'moment';\nimport DateInput from \"../../../app/common/form/DateInput\";\nimport PlaceInput from \"../../../app/common/form/PlaceInput\";\nimport TextInput from \"../../../app/common/form/TextInput\";\nimport RadioInput from \"../../../app/common/form/RadioInput\";\n\nclass BasicPage extends Component {\n\n    render() {\n        const {pristine, submitting, handleSubmit, updateProfile} = this.props;\n        return (\n            <Segment>\n                <Header dividing size='large' content='Basics' />\n                <Form onSubmit={handleSubmit(updateProfile)}>\n                    <Field\n                        width={8}\n                        name='displayName'\n                        type='text'\n                        component={TextInput}\n                        placeholder='Known As'\n                    />\n                    <Form.Group inline>\n                        <label>Gender: </label>\n                        <Field\n                            name='gender'\n                            type='radio'\n                            value='male'\n                            label='Male'\n                            component={RadioInput}\n                        />\n\n                        <Field\n                            name='gender'\n                            type='radio'\n                            value='female'\n                            label='Female'\n                            component={RadioInput}\n                        />\n                    </Form.Group>\n                    <Field\n                        width={8}\n                        name='dateOfBirth'\n                        component={DateInput}\n                        placeholder='Date of Birth'\n                        dateFormat='YYYY-MM-DD'\n                        showYearDropdown={true}\n                        showMonthDropdown={true}\n                        dropdownMode='select'\n                        maxDate={moment().subtract(18, 'years')}\n                    />\n                    <Field\n                        name='city'\n                        placeholder='Home Town'\n                        options={{types: ['(cities)']}}\n                        label='Female'\n                        component={PlaceInput}\n                        width={8}\n                    />\n                    <Divider/>\n                    <Button disabled={pristine || submitting} size='large' positive content='Update Profile'/>\n                </Form>\n            </Segment>\n        );\n    }\n}\n\nexport default reduxForm({form: 'userProfile', enableReinitialize: true, destroyOnUnmount: false})(BasicPage);\n","import React from 'react';\nimport { Button, Divider, Form, Header, Segment } from 'semantic-ui-react';\nimport { Field, reduxForm } from 'redux-form';\nimport RadioInput from '../../../app/common/form/RadioInput';\nimport TextInput from '../../../app/common/form/TextInput';\nimport TextArea from '../../../app/common/form/TextArea';\nimport PlaceInput from '../../../app/common/form/PlaceInput';\nimport SelectInput from '../../../app/common/form/SelectInput';\n\nconst interests = [\n    { key: 'drinks', text: 'Drinks', value: 'drinks' },\n    { key: 'culture', text: 'Culture', value: 'culture' },\n    { key: 'film', text: 'Film', value: 'film' },\n    { key: 'food', text: 'Food', value: 'food' },\n    { key: 'music', text: 'Music', value: 'music' },\n    { key: 'travel', text: 'Travel', value: 'travel' }\n];\n\nconst AboutPage = ({ pristine, submitting, handleSubmit, updateProfile }) => {\n    return (\n        <Segment>\n            <Header dividing size=\"large\" content=\"About Me\" />\n            <p>Complete your profile to get the most out of this site</p>\n            <Form onSubmit={handleSubmit(updateProfile)}>\n                <Form.Group inline>\n                    <label>Tell us your status: </label>\n                    <Field name=\"status\" component={RadioInput} type=\"radio\" value=\"single\" label=\"Single\" />\n                    <Field\n                        name=\"status\"\n                        component={RadioInput}\n                        type=\"radio\"\n                        value=\"relationship\"\n                        label=\"Relationship\"\n                    />\n                    <Field\n                        name=\"status\"\n                        component={RadioInput}\n                        type=\"radio\"\n                        value=\"married\"\n                        label=\"Married\"\n                    />\n                </Form.Group>\n                <Divider />\n                <label>Tell us about yourself</label>\n                <Field name=\"about\" component={TextArea} placeholder=\"About Me\" />\n                <Field\n                    name=\"interests\"\n                    component={SelectInput}\n                    options={interests}\n                    value=\"interests\"\n                    multiple={true}\n                    placeholder=\"Select your interests\"\n                />\n                <Field\n                    width={8}\n                    name=\"occupation\"\n                    type=\"text\"\n                    component={TextInput}\n                    placeholder=\"Occupation\"\n                />\n                <Field\n                    width={8}\n                    name=\"origin\"\n                    options={{ types: ['(regions)'] }}\n                    component={PlaceInput}\n                    placeholder=\"Country of Origin\"\n                />\n                <Divider />\n                <Button disabled={pristine || submitting} size=\"large\" positive content=\"Update Profile\" />\n            </Form>\n        </Segment>\n    );\n};\n\nexport default reduxForm({ form: 'userProfile', enableReinitialize: true, destroyOnUnmount: false })(AboutPage);","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport {firestoreConnect} from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport {Image, Segment, Header, Divider, Grid, Button, Card, Icon} from 'semantic-ui-react';\nimport Dropzone from 'react-dropzone';\nimport Cropper from 'react-cropper';\nimport 'cropperjs/dist/cropper.css';\nimport { toastr } from 'react-redux-toastr'\nimport { uploadProfileImage, deletePhoto, setMainPhoto } from '../userActions';\n\nconst query = ({auth}) => {\n    return [\n        {\n            collection: 'users',\n            doc: auth.uid,\n            subcollections: [{collection: 'photos'}],\n            storeAs: 'photos'\n        }\n    ]\n};\n\nconst actions = {\n    uploadProfileImage,\n    deletePhoto,\n    setMainPhoto\n};\n\nconst mapState = (state) => ({\n    auth: state.firebase.auth,\n    profile: state.firebase.profile,\n    photos: state.firestore.ordered.photos,\n    loading: state.async.loading\n});\n\nclass PhotosPage extends Component {\n    state = {\n        files: [],\n        fileName: '',\n        cropResult: null,\n        image: {}\n    };\n\n    uploadImage = async () => {\n        try {\n            await this.props.uploadProfileImage(this.state.image, this.state.fileName);\n            this.cancelCrop();\n            toastr.success('Success', 'Photo has been uploaded');\n        } catch (error) {\n            toastr.error('Oops', error.message);\n        }\n    };\n\n    handlePhotoDelete = (photo) => async () => {\n        try {\n            this.props.deletePhoto(photo);\n        } catch (error) {\n            console.log(error);\n            toastr.error('Oops', error.message);\n        }\n    };\n\n    handleSetMainPhoto = photo => async () => {\n        try {\n            await this.props.setMainPhoto(photo);\n        } catch (error) {\n            console.log(error);\n            toastr.error('Oops', error.message);\n        }\n    };\n\n    cancelCrop = () => {\n        this.setState({\n            files: [],\n            image: {}\n        })\n    };\n\n    cropImage = () => {\n        if (typeof this.refs.cropper.getCroppedCanvas() === 'undefined') {\n            return;\n        }\n\n        this.refs.cropper.getCroppedCanvas().toBlob(blob => {\n            let imageUrl = URL.createObjectURL(blob);\n            this.setState({\n                cropResult: imageUrl,\n                image: blob\n            })\n        }, 'image/jpeg')\n    };\n\n    onDrop = (files) => {\n        this.setState({\n            files,\n            fileName: files[0].name\n        })\n    };\n\n    render() {\n        const {photos, profile, loading} = this.props;\n        let filterPhotos;\n        if (photos) {\n            filterPhotos = photos.filter(photo => {\n                return photo.url !== profile.photoURL;\n            })\n        }\n        return (\n            <Segment>\n                <Header dividing size='large' content='Your Photos' />\n                <Grid>\n                    <Grid.Row />\n                    <Grid.Column width={4}>\n                        <Header color='teal' sub content='Step 1 - Add Photo'/>\n                        <Dropzone onDrop={this.onDrop} multiple={false}>\n                            <div style={{paddingTop: '30px', textAlign: 'center'}}>\n                                <Icon name='upload' size='huge'/>\n                                <Header content='Drop image here or click to add'/>\n                            </div>\n                        </Dropzone>\n                    </Grid.Column>\n                    <Grid.Column width={1} />\n                    <Grid.Column width={4}>\n                        <Header sub color='teal' content='Step 2 - Resize image' />\n                        {this.state.files[0] &&\n                        <Cropper\n                            style={{height: 200, width: 200}}\n                            ref='cropper'\n                            src={this.state.files[0].preview}\n                            aspectRatio={1}\n                            viewMode={0}\n                            dragMode='move'\n                            guides={false}\n                            scalable={true}\n                            cropBoxmovable={true}\n                            cropBoxResizable={true}\n                            crop={this.cropImage}\n                        />}\n                    </Grid.Column>\n                    <Grid.Column width={1} />\n                    <Grid.Column width={4}>\n                        <Header sub color='teal' content='Step 3 - Preview and Upload' />\n                        {this.state.files[0] && (\n                            <div>\n                                <Image style={{minHeight: '200px', minWidth: '200px'}} src={this.state.cropResult}/>\n                                <Button.Group>\n                                    <Button loading={loading} onClick={this.uploadImage} style={{width: '100px'}} positive icon='check'/>\n                                    <Button disabled={loading} onClick={this.cancelCrop} style={{width: '100px'}} icon='close'/>\n                                </Button.Group>\n                            </div>\n                        )}\n                    </Grid.Column>\n\n                </Grid>\n\n                <Divider/>\n                <Header sub color='teal' content='All Photos'/>\n\n                <Card.Group itemsPerRow={5}>\n                    <Card>\n                        <Image src={profile.photoURL || '/assets/user.png'}/>\n                        <Button positive>Main Photo</Button>\n                    </Card>\n\n                    {photos && filterPhotos.map((photo) => (\n                        <Card key={photo.id}>\n                            <Image\n                                src={photo.url}\n                            />\n                            <div className='ui two buttons'>\n                                <Button loading={loading} onClick={this.handleSetMainPhoto(photo)} basic color='green'>Main</Button>\n                                <Button onClick={this.handlePhotoDelete(photo)} basic icon='trash' color='red' />\n                            </div>\n                        </Card>\n                    ))}\n\n                </Card.Group>\n            </Segment>\n        );\n    }\n}\n\nexport default compose(\n    connect(mapState, actions),\n    firestoreConnect(auth => query(auth))\n)(PhotosPage);","import React from 'react';\nimport { Segment, Header, Form, Divider, Label, Button, Icon } from 'semantic-ui-react';\nimport { Field, reduxForm } from 'redux-form';\nimport { combineValidators, matchesField, isRequired, composeValidators } from 'revalidate';\nimport TextInput from '../../../app/common/form/TextInput';\n\nconst validate = combineValidators({\n    newPassword1: isRequired({message: 'Please enter a password'}),\n    newPassword2: composeValidators(\n        isRequired({message: 'Please confirm your new password'}),\n        matchesField('newPassword1')({message: 'Passwords do not match'})\n    )()\n});\n\nconst AccountPage = ({ error, invalid, submitting, handleSubmit, updatePassword, providerId }) => {\n    return (\n        <Segment>\n            <Header dividing size=\"large\" content=\"Account\" />\n            {providerId && providerId === 'password' &&\n            <div>\n                <Header color=\"teal\" sub content=\"Change password\" />\n                <p>Use this form to update your account settings</p>\n                <Form onSubmit={handleSubmit(updatePassword)}>\n                    <Field\n                        width={8}\n                        name=\"newPassword1\"\n                        type=\"password\"\n                        pointing=\"left\"\n                        inline={true}\n                        component={TextInput}\n                        basic={true}\n                        placeholder=\"New Password\"\n                    />\n                    <Field\n                        width={8}\n                        name=\"newPassword2\"\n                        type=\"password\"\n                        inline={true}\n                        basic={true}\n                        pointing=\"left\"\n                        component={TextInput}\n                        placeholder=\"Confirm Password\"\n                    />\n                    {error && (\n                        <Label basic color=\"red\">\n                            {error}\n                        </Label>\n                    )}\n                    <Divider />\n                    <Button disabled={invalid || submitting} size=\"large\" positive content=\"Update Password\" />\n                </Form>\n            </div>}\n\n            {providerId && providerId === 'facebook.com' &&\n            <div>\n                <Header color=\"teal\" sub content=\"Facebook Account\" />\n                <p>Please visit Facebook to update your account settings</p>\n                <Button type=\"button\" color=\"facebook\">\n                    <Icon name=\"facebook\" />\n                    Go to Facebook\n                </Button>\n            </div>}\n\n            {providerId && providerId === 'google.com' &&\n            <div>\n                <Header color=\"teal\" sub content=\"Google Account\" />\n                <p>Please visit Google to update your account settings</p>\n                <Button type=\"button\" color=\"google plus\">\n                    <Icon name=\"google plus\" />\n                    Go to Google\n                </Button>\n            </div>}\n        </Segment>\n    );\n};\n\nexport default reduxForm({ form: 'account', validate})(AccountPage);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Grid } from 'semantic-ui-react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport SettingsNav from './SettingsNav';\nimport BasicPage from './BasicPage';\nimport AboutPage from './AboutPage';\nimport PhotosPage from './PhotosPage';\nimport AccountPage from './AccountPage';\nimport { updatePassword } from \"../../auth/authActions\";\nimport { updateProfile } from \"../userActions\";\n\nconst actions = {\n    updatePassword,\n    updateProfile\n};\n\nconst mapState = (state) => ({\n    providerId: state.firebase.auth.providerData[0].providerId,\n    user: state.firebase.profile\n});\n\nfunction SettingsDashboard({updatePassword, providerId, user, updateProfile}) {\n  return <Grid>\n      <Grid.Column width={12}>\n        <Switch>\n          <Redirect exact from='/settings' to='/settings/basic'></Redirect>\n          <Route path=\"/settings/basic\" render={() => <BasicPage updateProfile={updateProfile} initialValues={user}/>} />\n          <Route path=\"/settings/about\" render={() => <AboutPage updateProfile={updateProfile} initialValues={user}/>} />\n          <Route path=\"/settings/photos\" component={PhotosPage} />\n          <Route path=\"/settings/account\" render={() => <AccountPage updatePassword={updatePassword} providerId={providerId}/>} />\n        </Switch>\n      </Grid.Column>\n\n      <Grid.Column width={4}>\n        <SettingsNav />\n      </Grid.Column>\n    </Grid>;\n}\n\nexport default connect(mapState, actions)(SettingsDashboard);\n"],"sourceRoot":""}